getwd()
setwd("/Users/bbd5087/Box Sync/Strategic_Donors/")
netinf.results.files <- dir("./Data/results")
netinf.results.files
netinf.file <- "netinf_threshold_10_iter_7.RData"
# write
# load the netinf results
load(paste("./Data/results/",netinf.file,sep="")
)
netinf.file <- "netinf_threshold_10_iter_7.RData"
# write
# load the netinf results
load(paste("./Data/results/",netinf.file,sep=""))
ls()
# code assumes the working directory is set to 'Strategic_Donors'
netinf.results.files <- dir("./Data/results")
netinf.file <- "netinf_threshold_10_iter_7.RData"
# write
# load the netinf results
load(paste("./Data/results/",netinf.file,sep=""))
# load in vertex level data
vertex.data <- read.csv("./Data/influence_network_ergm/VLC_16_full.csv",stringsAsFactors=F)
## Zack's notes
# - activist - some secret model of “likelihood to take an action to advance a progressive cause”, so this may not be a good measure of general political activism; 0 - 100 (bins of 10; high values = higher activism relative to others, not a probability)
#- age - bins of 5 years
#- hhwealth - model of household total wealth, random bins
#- ideology - how liberal? 0 to 100 (bins of 5; 95-100 = most liberal)
#- income - individual income, random bins
#- partisanship - predicted probability of identifying as Dem, 0 - 100 (bins of 5)
#- pid - party ID, text
#- race - text
#These variable strings are pretty messy right now (e.g. weird characters, categorical variables), so I can change them to ordered numeric variables if you’d like - just let me know the best format for that.
# Extract vertex id
vertex.id <- as.character(vertex.data$Actor_ID)
# edgelist from netinf
donor.edgelist <- output$network
ls()
# load in vertex level data
vertex.data <- read.csv("./R_Code/influence_network_ergm/VLC_16_full.csv",stringsAsFactors=F)
# code assumes the working directory is set to 'Strategic_Donors'
netinf.results.files <- dir("./Data/results")
netinf.file <- "netinf_threshold_10_iter_7.RData"
# write
# load the netinf results
load(paste("./Data/results/",netinf.file,sep=""))
# load in vertex level data
vertex.data <- read.csv("./R_Code/influence_network_ergm/VLC_16_full.csv",stringsAsFactors=F)
## Zack's notes
# - activist - some secret model of “likelihood to take an action to advance a progressive cause”, so this may not be a good measure of general political activism; 0 - 100 (bins of 10; high values = higher activism relative to others, not a probability)
#- age - bins of 5 years
#- hhwealth - model of household total wealth, random bins
#- ideology - how liberal? 0 to 100 (bins of 5; 95-100 = most liberal)
#- income - individual income, random bins
#- partisanship - predicted probability of identifying as Dem, 0 - 100 (bins of 5)
#- pid - party ID, text
#- race - text
#These variable strings are pretty messy right now (e.g. weird characters, categorical variables), so I can change them to ordered numeric variables if you’d like - just let me know the best format for that.
# Extract vertex id
vertex.id <- as.character(vertex.data$Actor_ID)
# edgelist from netinf
donor.edgelist <- out$network
# node-level data for netinf
netinf.data <- out$data
# master list of nodes included in netinf
uniqueDonors <- unique(as.character(netinf.data$Donor_ID))
# throw out vertex data for nodes not included in the network
net.vertex.data <- vertex.data[which(is.element(vertex.id,uniqueDonors)),]
nrow(net.vertex.data)/length(uniqueDonors)
# looks like all nodes in the netinf data can be found in the vertex id data
# construct network object
library(network)
influence.network <- network.initialize(nrow(net.vertex.data))
network.vertex.names(influence.network) <- as.character(net.vertex.data$Actor_ID)
edges <- as.matrix(cbind(as.character(donor.edgelist[,1]),as.character(donor.edgelist[,2])))
network.ids <- as.character(net.vertex.data$Actor_ID)
for(i in 1:nrow(edges)){
sender <- which(network.ids==edges[i,1])
receiver <- which(network.ids==edges[i,2])
influence.network[sender,receiver] <- 1
if(i/500==round(i/500)) print(i)
}
rm(list="vertex.data")
save(list=c("influence.network","net.vertex.data"),file="influence.network.RData")
rm(list=ls())
gc()
donor.edgelist
donor.edgelist <- out$network
ls9
ls()
# code assumes the working directory is set to 'Strategic_Donors'
netinf.results.files <- dir("./Data/results")
netinf.file <- "netinf_threshold_10_iter_7.RData"
# write
# load the netinf results
load(paste("./Data/results/",netinf.file,sep=""))
# load in vertex level data
vertex.data <- read.csv("./R_Code/influence_network_ergm/VLC_16_full.csv",stringsAsFactors=F)
## Zack's notes
# - activist - some secret model of “likelihood to take an action to advance a progressive cause”, so this may not be a good measure of general political activism; 0 - 100 (bins of 10; high values = higher activism relative to others, not a probability)
#- age - bins of 5 years
#- hhwealth - model of household total wealth, random bins
#- ideology - how liberal? 0 to 100 (bins of 5; 95-100 = most liberal)
#- income - individual income, random bins
#- partisanship - predicted probability of identifying as Dem, 0 - 100 (bins of 5)
#- pid - party ID, text
#- race - text
#These variable strings are pretty messy right now (e.g. weird characters, categorical variables), so I can change them to ordered numeric variables if you’d like - just let me know the best format for that.
# Extract vertex id
vertex.id <- as.character(vertex.data$Actor_ID)
# edgelist from netinf
donor.edgelist <- out$network
# node-level data for netinf
netinf.data <- out$data
out$network
names(out)
# edgelist from netinf
donor.edgelist <- out$netinf_out$network
# node-level data for netinf
netinf.data <- out$netinf_out$data
dim(donor.edgelist)
donor.edgelist
names(out$netinf_out)
# edgelist from netinf
donor.edgelist <- cbind(out$netinf_out$origin_node,out$netinf_out$destination_node)
donor.edgelist
names(out$netinf_out)
names(out)
ls()
names(out)
names(netinf_out)
names(out$netinf_out)
setwd("/Users/bbd5087/Box\ Sync/Box/Research/donor_networks_netinf/Strategic_Donors")
ls
setwd("/Users/bbd5087/Box\ Sync/Box/Research/donor_networks_netinf/donation_diffusion/analysis")
devtools::install_github('desmarais-lab/NetworkInference')
library(tidyverse)
library(NetworkInference)
library(microbenchmark)
source('../data_processing/remove_isolates.R')
ls()
rm(list=ls())
devtools::install_github('desmarais-lab/NetworkInference')
library(tidyverse)
library(NetworkInference)
library(microbenchmark)
source('../data_processing/remove_isolates.R')
ls()
remove_isolates
install.packages("microbenchmark")
args = commandArgs(trailingOnly=TRUE)
isolate_threshold = as.integer(args[1])
init_params = 0.012
# Read the preprocessed data (see `make_netinf_data.R` for details)
cat('threshold: ', isolate_threshold, '\n')
df <- read_csv('../data/data_for_netinf.R')
df <- remove_isolates(df, isolate_threshold)
cat('Number of donors', length(unique(df$Donor_ID)), '\n')
df
df <- read_csv('../data/data_for_netinf.R')
df <- read_csv('../data/data_for_netinf.R')
df <- remove_isolates(df, isolate_threshold)
cat('Number of donors', length(unique(df$Donor_ID)), '\n')
args
isolate_threshold = 10
df <- read_csv('../data/data_for_netinf.R')
df <- remove_isolates(df, isolate_threshold)
cat('Number of donors', length(unique(df$Donor_ID)), '\n')
rm(list=ls())
